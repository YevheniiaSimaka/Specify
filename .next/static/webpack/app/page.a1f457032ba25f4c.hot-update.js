"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMKeyframesResolver: function() { return /* binding */ DOMKeyframesResolver; }\n/* harmony export */ });\n/* harmony import */ var _animation_utils_is_none_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../animation/utils/is-none.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs\");\n/* harmony import */ var _utils_css_variables_conversion_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/css-variables-conversion.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs\");\n/* harmony import */ var _utils_is_css_variable_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/is-css-variable.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs\");\n/* harmony import */ var _utils_unit_conversion_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/unit-conversion.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs\");\n/* harmony import */ var _value_types_dimensions_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./value-types/dimensions.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs\");\n/* harmony import */ var _utils_KeyframesResolver_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/KeyframesResolver.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs\");\n/* harmony import */ var _html_utils_make_none_animatable_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../html/utils/make-none-animatable.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs\");\n\n\n\n\n\n\n\nclass DOMKeyframesResolver extends _utils_KeyframesResolver_mjs__WEBPACK_IMPORTED_MODULE_0__.KeyframeResolver {\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current) return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */ for(let i = 0; i < unresolvedKeyframes.length; i++){\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && (0,_utils_is_css_variable_mjs__WEBPACK_IMPORTED_MODULE_1__.isCSSVariableToken)(keyframe)) {\n                const resolved = (0,_utils_css_variables_conversion_mjs__WEBPACK_IMPORTED_MODULE_2__.getVariableValue)(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */ this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */ if (!_utils_unit_conversion_mjs__WEBPACK_IMPORTED_MODULE_3__.positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = (0,_value_types_dimensions_mjs__WEBPACK_IMPORTED_MODULE_4__.findDimensionValueType)(origin);\n        const targetType = (0,_value_types_dimensions_mjs__WEBPACK_IMPORTED_MODULE_4__.findDimensionValueType)(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */ if (originType === targetType) return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */ if ((0,_utils_unit_conversion_mjs__WEBPACK_IMPORTED_MODULE_3__.isNumOrPxType)(originType) && (0,_utils_unit_conversion_mjs__WEBPACK_IMPORTED_MODULE_3__.isNumOrPxType)(targetType)) {\n            for(let i = 0; i < unresolvedKeyframes.length; i++){\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        } else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */ this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for(let i = 0; i < unresolvedKeyframes.length; i++){\n            if ((0,_animation_utils_is_none_mjs__WEBPACK_IMPORTED_MODULE_5__.isNone)(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            (0,_html_utils_make_none_animatable_mjs__WEBPACK_IMPORTED_MODULE_6__.makeNoneKeyframesAnimatable)(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current) return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = _utils_unit_conversion_mjs__WEBPACK_IMPORTED_MODULE_3__.positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current) return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = _utils_unit_conversion_mjs__WEBPACK_IMPORTED_MODULE_3__.positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach((param)=>{\n                let [unsetTransformName, unsetTransformValue] = param;\n                element.getValue(unsetTransformName).set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n    constructor(unresolvedKeyframes, onComplete, name, motionValue){\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeNoneKeyframesAnimatable: function() { return /* binding */ makeNoneKeyframesAnimatable; }\n/* harmony export */ });\n/* harmony import */ var _dom_value_types_animatable_none_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/value-types/animatable-none.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs\");\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */ const invalidTemplates = new Set([\n    \"auto\",\n    \"none\",\n    \"0\"\n]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while(i < unresolvedKeyframes.length && !animatableTemplate){\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" && !invalidTemplates.has(keyframe)) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes){\n            unresolvedKeyframes[noneIndex] = (0,_dom_value_types_animatable_none_mjs__WEBPACK_IMPORTED_MODULE_0__.getAnimatableNone)(name, animatableTemplate);\n        }\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvcmVuZGVyL2h0bWwvdXRpbHMvbWFrZS1ub25lLWFuaW1hdGFibGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThFO0FBRTlFOzs7OztDQUtDLEdBQ0QsTUFBTUMsbUJBQW1CLElBQUlDLElBQUk7SUFBQztJQUFRO0lBQVE7Q0FBSTtBQUN0RCxTQUFTQyw0QkFBNEJDLG1CQUFtQixFQUFFQyxtQkFBbUIsRUFBRUMsSUFBSTtJQUMvRSxJQUFJQyxJQUFJO0lBQ1IsSUFBSUMscUJBQXFCQztJQUN6QixNQUFPRixJQUFJSCxvQkFBb0JNLE1BQU0sSUFBSSxDQUFDRixtQkFBb0I7UUFDMUQsTUFBTUcsV0FBV1AsbUJBQW1CLENBQUNHLEVBQUU7UUFDdkMsSUFBSSxPQUFPSSxhQUFhLFlBQVksQ0FBQ1YsaUJBQWlCVyxHQUFHLENBQUNELFdBQVc7WUFDakVILHFCQUFxQkosbUJBQW1CLENBQUNHLEVBQUU7UUFDL0M7UUFDQUE7SUFDSjtJQUNBLElBQUlDLHNCQUFzQkYsTUFBTTtRQUM1QixLQUFLLE1BQU1PLGFBQWFSLG9CQUFxQjtZQUN6Q0QsbUJBQW1CLENBQUNTLFVBQVUsR0FBR2IsdUZBQWlCQSxDQUFDTSxNQUFNRTtRQUM3RDtJQUNKO0FBQ0o7QUFFdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZyYW1lci1tb3Rpb24vZGlzdC9lcy9yZW5kZXIvaHRtbC91dGlscy9tYWtlLW5vbmUtYW5pbWF0YWJsZS5tanM/ZTRmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRBbmltYXRhYmxlTm9uZSB9IGZyb20gJy4uLy4uL2RvbS92YWx1ZS10eXBlcy9hbmltYXRhYmxlLW5vbmUubWpzJztcblxuLyoqXG4gKiBJZiB3ZSBlbmNvdW50ZXIga2V5ZnJhbWVzIGxpa2UgXCJub25lXCIgb3IgXCIwXCIgYW5kIHdlIGFsc28gaGF2ZSBrZXlmcmFtZXMgbGlrZVxuICogXCIjZmZmXCIgb3IgXCIyMDBweCAyMDBweFwiIHdlIHdhbnQgdG8gZmluZCBhIGtleWZyYW1lIHRvIHNlcnZlIGFzIGEgdGVtcGxhdGUgZm9yXG4gKiB0aGUgXCJub25lXCIga2V5ZnJhbWVzLiBJbiB0aGlzIGNhc2UgXCIjZmZmXCIgb3IgXCIyMDBweCAyMDBweFwiIC0gdGhlbiB0aGVzZSBnZXQgdHVybmVkIGludG9cbiAqIHplcm8gZXF1aXZhbGVudHMsIGkuZS4gXCIjZmZmMFwiIG9yIFwiMHB4IDBweFwiLlxuICovXG5jb25zdCBpbnZhbGlkVGVtcGxhdGVzID0gbmV3IFNldChbXCJhdXRvXCIsIFwibm9uZVwiLCBcIjBcIl0pO1xuZnVuY3Rpb24gbWFrZU5vbmVLZXlmcmFtZXNBbmltYXRhYmxlKHVucmVzb2x2ZWRLZXlmcmFtZXMsIG5vbmVLZXlmcmFtZUluZGV4ZXMsIG5hbWUpIHtcbiAgICBsZXQgaSA9IDA7XG4gICAgbGV0IGFuaW1hdGFibGVUZW1wbGF0ZSA9IHVuZGVmaW5lZDtcbiAgICB3aGlsZSAoaSA8IHVucmVzb2x2ZWRLZXlmcmFtZXMubGVuZ3RoICYmICFhbmltYXRhYmxlVGVtcGxhdGUpIHtcbiAgICAgICAgY29uc3Qga2V5ZnJhbWUgPSB1bnJlc29sdmVkS2V5ZnJhbWVzW2ldO1xuICAgICAgICBpZiAodHlwZW9mIGtleWZyYW1lID09PSBcInN0cmluZ1wiICYmICFpbnZhbGlkVGVtcGxhdGVzLmhhcyhrZXlmcmFtZSkpIHtcbiAgICAgICAgICAgIGFuaW1hdGFibGVUZW1wbGF0ZSA9IHVucmVzb2x2ZWRLZXlmcmFtZXNbaV07XG4gICAgICAgIH1cbiAgICAgICAgaSsrO1xuICAgIH1cbiAgICBpZiAoYW5pbWF0YWJsZVRlbXBsYXRlICYmIG5hbWUpIHtcbiAgICAgICAgZm9yIChjb25zdCBub25lSW5kZXggb2Ygbm9uZUtleWZyYW1lSW5kZXhlcykge1xuICAgICAgICAgICAgdW5yZXNvbHZlZEtleWZyYW1lc1tub25lSW5kZXhdID0gZ2V0QW5pbWF0YWJsZU5vbmUobmFtZSwgYW5pbWF0YWJsZVRlbXBsYXRlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHsgbWFrZU5vbmVLZXlmcmFtZXNBbmltYXRhYmxlIH07XG4iXSwibmFtZXMiOlsiZ2V0QW5pbWF0YWJsZU5vbmUiLCJpbnZhbGlkVGVtcGxhdGVzIiwiU2V0IiwibWFrZU5vbmVLZXlmcmFtZXNBbmltYXRhYmxlIiwidW5yZXNvbHZlZEtleWZyYW1lcyIsIm5vbmVLZXlmcmFtZUluZGV4ZXMiLCJuYW1lIiwiaSIsImFuaW1hdGFibGVUZW1wbGF0ZSIsInVuZGVmaW5lZCIsImxlbmd0aCIsImtleWZyYW1lIiwiaGFzIiwibm9uZUluZGV4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateMotionValuesFromProps: function() { return /* binding */ updateMotionValuesFromProps; }\n/* harmony export */ });\n/* harmony import */ var _value_use_will_change_is_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../value/use-will-change/is.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs\");\n/* harmony import */ var _utils_warn_once_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/warn-once.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/warn-once.mjs\");\n/* harmony import */ var _value_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../value/index.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/value/index.mjs\");\n/* harmony import */ var _value_utils_is_motion_value_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../value/utils/is-motion-value.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs\");\n\n\n\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for(const key in next){\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if ((0,_value_utils_is_motion_value_mjs__WEBPACK_IMPORTED_MODULE_0__.isMotionValue)(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */ element.addValue(key, nextValue);\n            if ((0,_value_use_will_change_is_mjs__WEBPACK_IMPORTED_MODULE_1__.isWillChangeMotionValue)(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */ if (true) {\n                (0,_utils_warn_once_mjs__WEBPACK_IMPORTED_MODULE_2__.warnOnce)(nextValue.version === \"11.1.8\", \"Attempting to mix Framer Motion versions \".concat(nextValue.version, \" with 11.1.8 may not work as expected.\"));\n            }\n        } else if ((0,_value_utils_is_motion_value_mjs__WEBPACK_IMPORTED_MODULE_0__.isMotionValue)(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */ element.addValue(key, (0,_value_index_mjs__WEBPACK_IMPORTED_MODULE_3__.motionValue)(nextValue, {\n                owner: element\n            }));\n            if ((0,_value_use_will_change_is_mjs__WEBPACK_IMPORTED_MODULE_1__.isWillChangeMotionValue)(willChange)) {\n                willChange.remove(key);\n            }\n        } else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */ if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                } else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            } else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, (0,_value_index_mjs__WEBPACK_IMPORTED_MODULE_3__.motionValue)(latestValue !== undefined ? latestValue : nextValue, {\n                    owner: element\n                }));\n            }\n        }\n    }\n    // Handle removed values\n    for(const key in prev){\n        if (next[key] === undefined) element.removeValue(key);\n    }\n    return next;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvcmVuZGVyL3V0aWxzL21vdGlvbi12YWx1ZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZFO0FBQ3hCO0FBQ0Q7QUFDa0I7QUFFdEUsU0FBU0ksNEJBQTRCQyxPQUFPLEVBQUVDLElBQUksRUFBRUMsSUFBSTtJQUNwRCxNQUFNLEVBQUVDLFVBQVUsRUFBRSxHQUFHRjtJQUN2QixJQUFLLE1BQU1HLE9BQU9ILEtBQU07UUFDcEIsTUFBTUksWUFBWUosSUFBSSxDQUFDRyxJQUFJO1FBQzNCLE1BQU1FLFlBQVlKLElBQUksQ0FBQ0UsSUFBSTtRQUMzQixJQUFJTiwrRUFBYUEsQ0FBQ08sWUFBWTtZQUMxQjs7O2FBR0MsR0FDREwsUUFBUU8sUUFBUSxDQUFDSCxLQUFLQztZQUN0QixJQUFJVixzRkFBdUJBLENBQUNRLGFBQWE7Z0JBQ3JDQSxXQUFXSyxHQUFHLENBQUNKO1lBQ25CO1lBQ0E7OzthQUdDLEdBQ0QsSUFBSUssSUFBc0MsRUFBRTtnQkFDeENiLDhEQUFRQSxDQUFDUyxVQUFVSyxPQUFPLEtBQUssVUFBVSw0Q0FBOEQsT0FBbEJMLFVBQVVLLE9BQU8sRUFBQztZQUMzRztRQUNKLE9BQ0ssSUFBSVosK0VBQWFBLENBQUNRLFlBQVk7WUFDL0I7OzthQUdDLEdBQ0ROLFFBQVFPLFFBQVEsQ0FBQ0gsS0FBS1AsNkRBQVdBLENBQUNRLFdBQVc7Z0JBQUVNLE9BQU9YO1lBQVE7WUFDOUQsSUFBSUwsc0ZBQXVCQSxDQUFDUSxhQUFhO2dCQUNyQ0EsV0FBV1MsTUFBTSxDQUFDUjtZQUN0QjtRQUNKLE9BQ0ssSUFBSUUsY0FBY0QsV0FBVztZQUM5Qjs7OzthQUlDLEdBQ0QsSUFBSUwsUUFBUWEsUUFBUSxDQUFDVCxNQUFNO2dCQUN2QixNQUFNVSxnQkFBZ0JkLFFBQVFlLFFBQVEsQ0FBQ1g7Z0JBQ3ZDLElBQUlVLGNBQWNFLFNBQVMsS0FBSyxNQUFNO29CQUNsQ0YsY0FBY0csSUFBSSxDQUFDWjtnQkFDdkIsT0FDSyxJQUFJLENBQUNTLGNBQWNJLFdBQVcsRUFBRTtvQkFDakNKLGNBQWNLLEdBQUcsQ0FBQ2Q7Z0JBQ3RCO1lBQ0osT0FDSztnQkFDRCxNQUFNZSxjQUFjcEIsUUFBUXFCLGNBQWMsQ0FBQ2pCO2dCQUMzQ0osUUFBUU8sUUFBUSxDQUFDSCxLQUFLUCw2REFBV0EsQ0FBQ3VCLGdCQUFnQkUsWUFBWUYsY0FBY2YsV0FBVztvQkFBRU0sT0FBT1g7Z0JBQVE7WUFDNUc7UUFDSjtJQUNKO0lBQ0Esd0JBQXdCO0lBQ3hCLElBQUssTUFBTUksT0FBT0YsS0FBTTtRQUNwQixJQUFJRCxJQUFJLENBQUNHLElBQUksS0FBS2tCLFdBQ2R0QixRQUFRdUIsV0FBVyxDQUFDbkI7SUFDNUI7SUFDQSxPQUFPSDtBQUNYO0FBRXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9mcmFtZXItbW90aW9uL2Rpc3QvZXMvcmVuZGVyL3V0aWxzL21vdGlvbi12YWx1ZXMubWpzP2U1N2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNXaWxsQ2hhbmdlTW90aW9uVmFsdWUgfSBmcm9tICcuLi8uLi92YWx1ZS91c2Utd2lsbC1jaGFuZ2UvaXMubWpzJztcbmltcG9ydCB7IHdhcm5PbmNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvd2Fybi1vbmNlLm1qcyc7XG5pbXBvcnQgeyBtb3Rpb25WYWx1ZSB9IGZyb20gJy4uLy4uL3ZhbHVlL2luZGV4Lm1qcyc7XG5pbXBvcnQgeyBpc01vdGlvblZhbHVlIH0gZnJvbSAnLi4vLi4vdmFsdWUvdXRpbHMvaXMtbW90aW9uLXZhbHVlLm1qcyc7XG5cbmZ1bmN0aW9uIHVwZGF0ZU1vdGlvblZhbHVlc0Zyb21Qcm9wcyhlbGVtZW50LCBuZXh0LCBwcmV2KSB7XG4gICAgY29uc3QgeyB3aWxsQ2hhbmdlIH0gPSBuZXh0O1xuICAgIGZvciAoY29uc3Qga2V5IGluIG5leHQpIHtcbiAgICAgICAgY29uc3QgbmV4dFZhbHVlID0gbmV4dFtrZXldO1xuICAgICAgICBjb25zdCBwcmV2VmFsdWUgPSBwcmV2W2tleV07XG4gICAgICAgIGlmIChpc01vdGlvblZhbHVlKG5leHRWYWx1ZSkpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogSWYgdGhpcyBpcyBhIG1vdGlvbiB2YWx1ZSBmb3VuZCBpbiBwcm9wcyBvciBzdHlsZSwgd2Ugd2FudCB0byBhZGQgaXRcbiAgICAgICAgICAgICAqIHRvIG91ciB2aXN1YWwgZWxlbWVudCdzIG1vdGlvbiB2YWx1ZSBtYXAuXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGVsZW1lbnQuYWRkVmFsdWUoa2V5LCBuZXh0VmFsdWUpO1xuICAgICAgICAgICAgaWYgKGlzV2lsbENoYW5nZU1vdGlvblZhbHVlKHdpbGxDaGFuZ2UpKSB7XG4gICAgICAgICAgICAgICAgd2lsbENoYW5nZS5hZGQoa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQ2hlY2sgdGhlIHZlcnNpb24gb2YgdGhlIGluY29taW5nIG1vdGlvbiB2YWx1ZSB3aXRoIHRoaXMgdmVyc2lvblxuICAgICAgICAgICAgICogYW5kIHdhcm4gYWdhaW5zdCBtaXNtYXRjaGVzLlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICAgICAgICAgICAgICAgIHdhcm5PbmNlKG5leHRWYWx1ZS52ZXJzaW9uID09PSBcIjExLjEuOFwiLCBgQXR0ZW1wdGluZyB0byBtaXggRnJhbWVyIE1vdGlvbiB2ZXJzaW9ucyAke25leHRWYWx1ZS52ZXJzaW9ufSB3aXRoIDExLjEuOCBtYXkgbm90IHdvcmsgYXMgZXhwZWN0ZWQuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNNb3Rpb25WYWx1ZShwcmV2VmFsdWUpKSB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIElmIHdlJ3JlIHN3YXBwaW5nIGZyb20gYSBtb3Rpb24gdmFsdWUgdG8gYSBzdGF0aWMgdmFsdWUsXG4gICAgICAgICAgICAgKiBjcmVhdGUgYSBuZXcgbW90aW9uIHZhbHVlIGZyb20gdGhhdFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBlbGVtZW50LmFkZFZhbHVlKGtleSwgbW90aW9uVmFsdWUobmV4dFZhbHVlLCB7IG93bmVyOiBlbGVtZW50IH0pKTtcbiAgICAgICAgICAgIGlmIChpc1dpbGxDaGFuZ2VNb3Rpb25WYWx1ZSh3aWxsQ2hhbmdlKSkge1xuICAgICAgICAgICAgICAgIHdpbGxDaGFuZ2UucmVtb3ZlKGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocHJldlZhbHVlICE9PSBuZXh0VmFsdWUpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogSWYgdGhpcyBpcyBhIGZsYXQgdmFsdWUgdGhhdCBoYXMgY2hhbmdlZCwgdXBkYXRlIHRoZSBtb3Rpb24gdmFsdWVcbiAgICAgICAgICAgICAqIG9yIGNyZWF0ZSBvbmUgaWYgaXQgZG9lc24ndCBleGlzdC4gV2Ugb25seSB3YW50IHRvIGRvIHRoaXMgaWYgd2UncmVcbiAgICAgICAgICAgICAqIG5vdCBoYW5kbGluZyB0aGUgdmFsdWUgd2l0aCBvdXIgYW5pbWF0aW9uIHN0YXRlLlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBpZiAoZWxlbWVudC5oYXNWYWx1ZShrZXkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdWYWx1ZSA9IGVsZW1lbnQuZ2V0VmFsdWUoa2V5KTtcbiAgICAgICAgICAgICAgICBpZiAoZXhpc3RpbmdWYWx1ZS5saXZlU3R5bGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdWYWx1ZS5qdW1wKG5leHRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFleGlzdGluZ1ZhbHVlLmhhc0FuaW1hdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nVmFsdWUuc2V0KG5leHRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbGF0ZXN0VmFsdWUgPSBlbGVtZW50LmdldFN0YXRpY1ZhbHVlKGtleSk7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5hZGRWYWx1ZShrZXksIG1vdGlvblZhbHVlKGxhdGVzdFZhbHVlICE9PSB1bmRlZmluZWQgPyBsYXRlc3RWYWx1ZSA6IG5leHRWYWx1ZSwgeyBvd25lcjogZWxlbWVudCB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSGFuZGxlIHJlbW92ZWQgdmFsdWVzXG4gICAgZm9yIChjb25zdCBrZXkgaW4gcHJldikge1xuICAgICAgICBpZiAobmV4dFtrZXldID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBlbGVtZW50LnJlbW92ZVZhbHVlKGtleSk7XG4gICAgfVxuICAgIHJldHVybiBuZXh0O1xufVxuXG5leHBvcnQgeyB1cGRhdGVNb3Rpb25WYWx1ZXNGcm9tUHJvcHMgfTtcbiJdLCJuYW1lcyI6WyJpc1dpbGxDaGFuZ2VNb3Rpb25WYWx1ZSIsIndhcm5PbmNlIiwibW90aW9uVmFsdWUiLCJpc01vdGlvblZhbHVlIiwidXBkYXRlTW90aW9uVmFsdWVzRnJvbVByb3BzIiwiZWxlbWVudCIsIm5leHQiLCJwcmV2Iiwid2lsbENoYW5nZSIsImtleSIsIm5leHRWYWx1ZSIsInByZXZWYWx1ZSIsImFkZFZhbHVlIiwiYWRkIiwicHJvY2VzcyIsInZlcnNpb24iLCJvd25lciIsInJlbW92ZSIsImhhc1ZhbHVlIiwiZXhpc3RpbmdWYWx1ZSIsImdldFZhbHVlIiwibGl2ZVN0eWxlIiwianVtcCIsImhhc0FuaW1hdGVkIiwic2V0IiwibGF0ZXN0VmFsdWUiLCJnZXRTdGF0aWNWYWx1ZSIsInVuZGVmaW5lZCIsInJlbW92ZVZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/framer-motion/dist/es/value/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/framer-motion/dist/es/value/index.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MotionValue: function() { return /* binding */ MotionValue; },\n/* harmony export */   collectMotionValues: function() { return /* binding */ collectMotionValues; },\n/* harmony export */   motionValue: function() { return /* binding */ motionValue; }\n/* harmony export */ });\n/* harmony import */ var _utils_subscription_manager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/subscription-manager.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs\");\n/* harmony import */ var _utils_velocity_per_second_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/velocity-per-second.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs\");\n/* harmony import */ var _utils_warn_once_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/warn-once.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/utils/warn-once.mjs\");\n/* harmony import */ var _frameloop_sync_time_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../frameloop/sync-time.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs\");\n/* harmony import */ var _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../frameloop/frame.mjs */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/frameloop/frame.mjs\");\n\n\n\n\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */ const MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value)=>{\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */ class MotionValue {\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = _frameloop_sync_time_mjs__WEBPACK_IMPORTED_MODULE_0__.time.now();\n    }\n    setPrevFrameValue() {\n        let prevFrameValue = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.current;\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */ onChange(subscription) {\n        if (true) {\n            (0,_utils_warn_once_mjs__WEBPACK_IMPORTED_MODULE_1__.warnOnce)(false, 'value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).');\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new _utils_subscription_manager_mjs__WEBPACK_IMPORTED_MODULE_2__.SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return ()=>{\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */ _frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_3__.frame.read(()=>{\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for(const eventManagers in this.events){\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */ attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */ set(v) {\n        let render = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        } else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */ jump(v) {\n        let endAnimation = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect) this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */ get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */ getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */ getVelocity() {\n        const currentTime = _frameloop_sync_time_mjs__WEBPACK_IMPORTED_MODULE_0__.time.now();\n        if (!this.canTrackVelocity || this.prevFrameValue === undefined || currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return (0,_utils_velocity_per_second_mjs__WEBPACK_IMPORTED_MODULE_4__.velocityPerSecond)(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */ start(startAnimation) {\n        this.stop();\n        return new Promise((resolve)=>{\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(()=>{\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */ stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */ isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */ destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */ constructor(init, options = {}){\n        var _this = this;\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */ this.version = \"11.1.8\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */ this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */ this.events = {};\n        this.updateAndNotify = function(v) {\n            let render = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n            const currentTime = _frameloop_sync_time_mjs__WEBPACK_IMPORTED_MODULE_0__.time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */ if (_this.updatedAt !== currentTime) {\n                _this.setPrevFrameValue();\n            }\n            _this.prev = _this.current;\n            _this.setCurrent(v);\n            // Update update subscribers\n            if (_this.current !== _this.prev && _this.events.change) {\n                _this.events.change.notify(_this.current);\n            }\n            // Update render subscribers\n            if (render && _this.events.renderRequest) {\n                _this.events.renderRequest.notify(_this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/framer-motion/dist/es/value/index.mjs\n"));

/***/ })

});